"use strict";
$.fn.megaMenu = function (e) {
  var a = {
      caret: !1,
      textHighlighter: !1,
      caretArrows: [{ up: "caret-up", down: "caret-down" }],
    },
    n = $.extend(
      {
        menuBehaviour: "click",
        stickyHeader: !0,
        selector: $(this),
        caret: "",
        caretArrows: [{ up: "", down: "", upUrl: "", downUrl: "" }],
        highlighter: !0,
        followingHighlighter: !1,
        highlightColor: "",
        textHighlighterColor: "",
        animation: !1,
        animationClass: "",
      },
      a,
      e
    ),
    r = (n.selector, $(".main-links ul li [data-submenu]")),
    l = $(".menu-dropdown .menu-item-wrapper"),
    t = [],
    o = [],
    h = ($("#" + l.attr("id")), a.caretArrows[0].up),
    d = a.caretArrows[0].down;
  if (
    (!1 === n.stickyHeader
      ? $(".mega-menu").removeClass("sticky-header")
      : $(".mega-menu").addClass("sticky-header"),
    !0 === n.caret)
  )
    (h = n.caretArrows[0].up), (d = n.caretArrows[0].down);
  (n.caretArrows[0].up || n.caretArrows[0].down) &&
    ((n.caretArrows[0].upUrl = null), (n.caretArrows[0].downUrl = null)),
    $("[data-submenu]").append('<span class="caret ' + d + '"></span>'),
    !0 === n.caret &&
      "" !== n.caretArrows[0].downUrl &&
      ($(".mega-menu span.caret").removeClass("undefined"),
      $(".mega-menu span.caret").addClass("caret-img down"),
      $(".mega-menu span.caret.caret-img.down").css({
        "background-image": "url(" + n.caretArrows[0].downUrl + ")",
      })),
    $(
      "<style>\n      .mega-menu .main-links ul li a:hover{\n        border-color:" +
        n.highlightColor +
        "}\n    </style>"
    ).appendTo("head"),
    r.on(n.menuBehaviour, function () {
      r.removeClass("highlight"), r.css({ "border-color": "" });
    }),
    "" === n.menuBehaviour && (n.menuBehaviour = "click"),
    r.each(function (s) {
        var i = $(this).attr("data-submenu");
        t.push($(this).attr("data-submenu")),
          $(this).on(n.menuBehaviour, function () {
            var e = jQuery.inArray(i, o),
                a = $(this).find(".caret.caret-img");
      
            // Controllo apertura e chiusura con animazione basato sulla larghezza dello schermo
if (window.innerWidth >= 768) { // Desktop
    if (t[s] != o[e] || $(l[e]).hasClass("active")) {
      $(l[e]).css('opacity', '0');
      $(l[e]).slideUp(300, function () { // Chiusura con animazione di scorrimento
        $(this).removeClass("active"); // Rimuovi la classe dopo l'animazione
      });
      $(this).find("span").removeClass(h).addClass(d);
    } else {
      l.not($(l[e])).css("opacity", 0)
        .slideUp(300, function () { // Imposta l'opacità a 0 quando l'animazione è terminata
          $(this).css("display", "none"); // Nasconde l'elemento dopo l'animazione
        })
        .removeClass("active");
      $(l[e])
        .slideDown(300, function () {
          $(this).css("display", "flex"); // Esegui l'animazione di scorrimento
          $(this).css("opacity", 1); // Imposta l'opacità a 1 quando l'animazione è terminata
        })
        .addClass("active");
      $(this).find("span").removeClass(d).addClass(h);
    }
  } else { // Mobile
    // Gestione semplice senza animazione e nascondi .main-links quando il dropdown è attivo
    if (t[s] != o[e] || $(l[e]).hasClass("active")) {
      $(l[e]).removeClass("active");
      $(".main-links").show(); // Mostra .main-links quando il dropdown è chiuso
      $(this).find("span").removeClass(h).addClass(d);
    } else {
      l.removeClass("active");
      $(l[e]).addClass("active");
      $(".main-links").hide(); // Nascondi .main-links quando il dropdown è attivo
      $(this).find("span").removeClass(d).addClass(h);
    }
  }
  
            $(".menu-dropdown").find(".menu-item-wrapper").hasClass("active") &&
              ($(".mega-menu span.caret").addClass("down"),
              $(".mega-menu span.caret").css({
                "background-image": "url(" + n.caretArrows[0].downUrl + ")",
              })),
            a.hasClass("down")
              ? (a.removeClass("down"),
                a.addClass("up"),
                a.css({
                  "background-image": "url(" + n.caretArrows[0].upUrl + ")",
                }))
              : (a.removeClass("up"),
                a.addClass("down"),
                a.css({
                  "background-image": "url(" + n.caretArrows[0].downUrl + ")",
                })),
            (r.find("span").hasClass("caret-up") ||
              ($(this).find("span").hasClass("up") &&
                !$(this).hasClass("highlight"))) &&
              ($(this).addClass("highlight"),
              $(this).css({ "border-color": n.highlightColor }));
        });
    }),
    !0 === n.followingHighlighter &&
      ($(".main-links ul").append('<div class="follow-highlighter"></div>'),
      r.mouseover(function (e, a) {
        e.pageX, $(this).offset().left, $(this).innerWidth();
        $(".follow-highlighter").css({ display: "block" }),
          $(".main-links ul").addClass("follow-highlighter-enabled"),
          $(".follow-highlighter").css({
            width: $(this).innerWidth(),
            left: $(this).offset().left,
            "background-color": n.highlightColor,
          });
      })),
    $(".main-links ul").each(function () {
      $(this).mouseleave(function () {
        $(".main-links ul").removeClass("follow-highlighter-enabled"),
          $(".follow-highlighter").css({
            display: "none",
            left: $(r[0]).offset().left,
          });
      });
    }),
    !1 === n.highlighter &&
      ($(".main-links").addClass("disable-highlighter"),
      $(".follow-highlighter").remove()),
    !0 === n.textHighlighter && $(".main-links").addClass("text-highlighter"),
    n.textHighlighterColor &&
      $("style").append(
        ".mega-menu .text-highlighter.main-links ul li a:hover{\n      color:" +
          n.textHighlighterColor +
          "}"
      ),
    l.each(function (e) {
      o.push($(l[e]).attr("id"));
    }),
    !0 === n.animation && l.addClass(n.animationClass),
    $(".mobile-nav-icon a").click(function () {
      $(".follow-highlighter").remove(),
        $(".main-links").hasClass("active")
          ? ($(".main-links").removeClass("active"), $(".menu-dropdown").hide())
          : ($(".main-links").addClass("active"), $(".menu-dropdown").show());
    }),
    $(".menu-item-wrapper").prepend(`
        <div class="menu-navigation d-flex d-md-none">
            <a href="#" class="back-link">
                <i class="fa fa-arrow-left"></i> <!-- Icona di freccia a sinistra -->
            </a>
            <a href="#" class="close-menu">
                <i class="fa fa-times"></i> <!-- Icona X per chiudere il menu -->
            </a>
        </div>
    `),
    $(window).resize(function () {
      $(window).width() < 768
        ? $(".mega-menu").hasClass("sticky-header") &&
          ($(".mega-menu").addClass("responsive-menu"),
          $(".main-links").css({
            "margin-top": $(".mobile-nav-icon").outerHeight() + "px",
          }))
        : $(".main-links").css({ "margin-top": "0px" });
    }),
    $(document).ready(function () {
      $(".back-link").on("click", function () {
        r.trigger("click"), $(r[r.length - 1]).trigger("click");
      });
    });
};


$(".mega-menu").megaMenu({
    // menuBehaviour: "mouseover",
    // stickyHeader:false,
    // caret:true,
    // highlighter:false,
    caretArrows: [{
      up:"fa fa-angle-up",
      down:"fa fa-angle-down",
     
    }],
    highlightColor:"skyblue",
    animation:true,
    animationClass:"animated fadeIn",
    followingHighlighter:false,
  });
 $(document).ready(function () {
// Evento per mostrare il menu e l'overlay quando si clicca su una voce di menu con data-submenu
function updateOverlay() {
    if ($(".menu-item-wrapper.active").length > 0) {
        $(".menu-overlay").fadeIn(); // Mostra l'overlay
    } else {
        $(".menu-overlay").fadeOut(); // Nascondi l'overlay
    }
}

// Utilizza MutationObserver per monitorare i cambiamenti di classe sui sottomenu
const observer = new MutationObserver(function (mutations) {
    mutations.forEach(function (mutation) {
        if (mutation.attributeName === "class") {
            updateOverlay(); // Aggiorna l'overlay quando cambia la classe
        }
    });
});

// Imposta l'osservatore sui sottomenu
$(".menu-item-wrapper").each(function () {
    observer.observe(this, { attributes: true }); // Osserva i cambiamenti sugli attributi
});



// Evento per l'icona "X" che chiude il menu
$(".close-menu").on("click", function (e) {
    e.preventDefault(); // Previeni il comportamento di default del link
    $(".main-links").removeClass("active"); // Rimuovi la classe 'active' per chiudere il menu
    $(".menu-item-wrapper").removeClass("active"); // Rimuovi la classe active da tutti i submenù
    $(".menu-dropdown").hide(); // Nascondi il menu a discesa
    $(".menu-overlay").fadeOut(); // Nascondi l'overlay
});

// Nascondi l'overlay quando si clicca sull'overlay stesso
$(".menu-overlay").on("click", function () {
    $(".main-links").removeClass("active"); // Rimuovi la classe 'active' per chiudere il menu

    // Chiudi tutti i dropdown con animazione
    $(".menu-item-wrapper.active").slideUp(300, function() {
        $(this).removeClass("active"); // Rimuovi la classe active una volta completata l'animazione
    });

    // Nascondi l'overlay
    $(".menu-overlay").fadeOut();
});


});
